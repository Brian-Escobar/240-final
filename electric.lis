     1                                  ;Author Information:
     2                                  ;Author: Brian Escobar
     3                                  ;Email: brianescobar523@csu.fullerton.edu
     4                                  ;Section: CPSC 240-09
     5                                  ;Program Information:
     6                                  ;Program Name: Final
     7                                  ;
     8                                  ;==============================================================================
     9                                  extern printf
    10                                  extern scanf
    11                                  extern fgets
    12                                  extern stdin
    13                                  extern strlen
    14                                  extern atof
    15                                  
    16                                  global electric
    17                                  
    18                                  segment .data
    19                                  
    20 00000000 5468652074696D6520-     time db "The time on the clock is now 384819342 tics.", 10,0
    20 00000009 6F6E2074686520636C-
    20 00000012 6F636B206973206E6F-
    20 0000001B 772033383438313933-
    20 00000024 343220746963732E0A-
    20 0000002D 00                 
    21                                  
    22 0000002E 5765207475726E2079-     turn db "We turn your night into day.", 10, 0
    22 00000037 6F7572206E69676874-
    22 00000040 20696E746F20646179-
    22 00000049 2E0A00             
    23                                  
    24 0000004C 506C6561736520656E-     emf db "Please enter the emf value (volts): ",0
    24 00000055 746572207468652065-
    24 0000005E 6D662076616C756520-
    24 00000067 28766F6C7473293A20-
    24 00000070 00                 
    25                                  
    26 00000071 256C6600                emf_input db "%lf",0
    27                                  
    28 00000075 506C6561736520656E-     resistance db "Please enter the resistance (ohms): ",0
    28 0000007E 746572207468652072-
    28 00000087 6573697374616E6365-
    28 00000090 20286F686D73293A20-
    28 00000099 00                 
    29                                  
    30 0000009A 256C6600                resistance_input db "%lf",0
    31                                  
    32 0000009E 54686520636F6D7075-     computed db "The computed current is %.4lf amps.",10,0
    32 000000A7 746564206375727265-
    32 000000B0 6E7420697320252E34-
    32 000000B9 6C6620616D70732E0A-
    32 000000C2 00                 
    33                                  
    34 000000C3 54686520456C656374-     electric_power db "The Electric power will send the current to the caller.",10,0
    34 000000CC 72696320706F776572-
    34 000000D5 2077696C6C2073656E-
    34 000000DE 642074686520637572-
    34 000000E7 72656E7420746F2074-
    34 000000F0 68652063616C6C6572-
    34 000000F9 2E0A00             
    35                                  
    36 000000FC 54686520656E642074-     endtime db "The end time on the clock is now 384819342 tics.", 10,0
    36 00000105 696D65206F6E207468-
    36 0000010E 6520636C6F636B2069-
    36 00000117 73206E6F7720333834-
    36 00000120 383139333432207469-
    36 00000129 63732E0A00         
    37                                  
    38                                  segment .bss
    39                                  
    40                                  
    41                                  segment .text
    42                                  electric:
    43                                  
    44 00000000 55                      push    rbp
    45                                  
    46 00000001 4889E5                  mov     rbp,rsp
    47 00000004 53                      push    rbx
    48 00000005 51                      push    rcx
    49 00000006 52                      push    rdx
    50 00000007 56                      push    rsi
    51 00000008 57                      push    rdi
    52 00000009 4150                    push    r8
    53 0000000B 4151                    push    r9
    54 0000000D 4152                    push    r10
    55 0000000F 4153                    push    r11
    56 00000011 4154                    push    r12
    57 00000013 4155                    push    r13
    58 00000015 4156                    push    r14
    59 00000017 4157                    push    r15
    60 00000019 9C                      pushf
    61                                  
    62                                  ;================================Time db========================================
    63 0000001A 6A00                    push qword 0
    64 0000001C B800000000              mov rax, 0
    65 00000021 48BF-                   mov rdi, time
    65 00000023 [0000000000000000] 
    66 0000002B E8(00000000)            call printf
    67 00000030 58                      pop rax
    68                                  
    69                                  ;================================Turn db========================================
    70                                  
    71 00000031 6A00                    push qword 0
    72 00000033 B800000000              mov rax, 0
    73 00000038 48BF-                   mov rdi, turn
    73 0000003A [2E00000000000000] 
    74 00000042 E8(00000000)            call printf
    75 00000047 58                      pop rax
    76                                  
    77                                  ;================================Emf db=========================================
    78                                  
    79 00000048 6A00                    push qword 0
    80 0000004A B800000000              mov rax, 0
    81 0000004F 48BF-                   mov rdi, emf
    81 00000051 [4C00000000000000] 
    82 00000059 E8(00000000)            call printf
    83 0000005E 58                      pop rax
    84                                  
    85                                  ;=================================emf_input====================================
    86 0000005F 6A00                    push qword 0
    87 00000061 6A00                    push qword 0
    88 00000063 B800000000              mov rax, 0
    89 00000068 48BF-                   mov rdi, emf_input
    89 0000006A [7100000000000000] 
    90 00000072 4889E6                  mov rsi, rsp
    91 00000075 E8(00000000)            call scanf
    92 0000007A F2440F103C24            movsd xmm15, [rsp]
    93 00000080 58                      pop rax
    94 00000081 58                      pop rax
    95                                  ;=================================resistance====================================
    96                                  
    97 00000082 6A00                    push qword 0
    98 00000084 B800000000              mov rax, 0
    99 00000089 48BF-                   mov rdi, resistance
    99 0000008B [7500000000000000] 
   100 00000093 E8(00000000)            call printf
   101 00000098 58                      pop rax
   102                                  
   103                                  ;================================resistance_input==============================
   104 00000099 6A00                    push qword 0
   105 0000009B 6A00                    push qword 0
   106 0000009D B800000000              mov rax, 0
   107 000000A2 48BF-                   mov rdi, resistance_input
   107 000000A4 [9A00000000000000] 
   108 000000AC 4889E6                  mov rsi, rsp
   109 000000AF E8(00000000)            call scanf
   110 000000B4 F2440F103424            movsd xmm14, [rsp]
   111 000000BA 58                      pop rax
   112 000000BB 58                      pop rax
   113                                  
   114                                  ;================================MATH===========================================
   115 000000BC F2450F5EFE              divsd xmm15,xmm14         ; EMF / resistance
   116 000000C1 F2450F10EF              movsd xmm13, xmm15        ; store value from xmm15 into xmm13
   117                                  
   118                                  ;===============================computed========================================
   119 000000C6 6A00                    push qword 0
   120 000000C8 6A00                    push qword 0
   121 000000CA B801000000              mov rax, 1
   122 000000CF 48BF-                   mov rdi, computed
   122 000000D1 [9E00000000000000] 
   123 000000D9 F2410F10C5              movsd xmm0, xmm13
   124 000000DE E8(00000000)            call printf
   125 000000E3 58                      pop rax
   126 000000E4 58                      pop rax
   127                                  
   128                                  ;==============================electric power db================================
   129 000000E5 6A00                    push qword 0
   130 000000E7 B800000000              mov rax, 0
   131 000000EC 48BF-                   mov rdi, electric_power
   131 000000EE [C300000000000000] 
   132 000000F6 E8(00000000)            call printf
   133 000000FB 58                      pop rax
   134                                  
   135                                  ;==============================endtime=========================================
   136 000000FC 6A00                    push qword 0
   137 000000FE B800000000              mov rax, 0
   138 00000103 48BF-                   mov rdi, endtime
   138 00000105 [FC00000000000000] 
   139 0000010D E8(00000000)            call printf
   140 00000112 58                      pop rax
   141                                  
   142 00000113 F2410F10C5              movsd xmm0, xmm13
   143                                  ;===================Restore the original values to the GPRs=====================
   144 00000118 9D                      popf                                                        ;Restore rflags
   145 00000119 415F                    pop        r15                                              ;Restore r15
   146 0000011B 415E                    pop        r14                                              ;Restore r14
   147 0000011D 415D                    pop        r13                                              ;Restore r13
   148 0000011F 415C                    pop        r12                                              ;Restore r12
   149 00000121 415B                    pop        r11                                              ;Restore r11
   150 00000123 415A                    pop        r10                                              ;Restore r10
   151 00000125 4159                    pop        r9                                               ;Restore r9
   152 00000127 4158                    pop        r8                                               ;Restore r8
   153 00000129 5F                      pop        rdi                                              ;Restore rdi
   154 0000012A 5E                      pop        rsi                                              ;Restore rsi
   155 0000012B 5A                      pop        rdx                                              ;Restore rdx
   156 0000012C 59                      pop        rcx                                              ;Restore rcx
   157 0000012D 5B                      pop        rbx                                              ;Restore rbx
   158 0000012E 5D                      pop        rbp                                              ;Restore rbp
   159 0000012F C3                      ret
