     1                                  ;Author Information:
     2                                  ;Author: Brian Escobar
     3                                  ;Email: brianescobar523@csu.fullerton.edu
     4                                  ;Section: CPSC 240-09
     5                                  ;Program Information:
     6                                  ;Program Name: Final
     7                                  ;
     8                                  ;==============================================================================
     9                                  extern printf
    10                                  extern scanf
    11                                  extern fgets
    12                                  extern stdin
    13                                  extern strlen
    14                                  extern atof
    15                                  
    16                                  global resistance
    17                                  
    18                                  segment .data
    19                                  
    20 00000000 546865207374617274-     time db "The start time on the clock is now %lu tics.", 10,0
    20 00000009 2074696D65206F6E20-
    20 00000012 74686520636C6F636B-
    20 0000001B 206973206E6F772025-
    20 00000024 6C7520746963732E0A-
    20 0000002D 00                 
    21                                  
    22 0000002E 57652077696C6C206D-     text db "We will manage all your circuits.", 10, 0
    22 00000037 616E61676520616C6C-
    22 00000040 20796F757220636972-
    22 00000049 63756974732E0A00   
    23                                  
    24 00000051 506C6561736520656E-     entr db "Please enter the resistance pf the first subcircuit: ",0
    24 0000005A 746572207468652072-
    24 00000063 6573697374616E6365-
    24 0000006C 207066207468652066-
    24 00000075 697273742073756263-
    24 0000007E 6972637569743A2000 
    25                                  
    26 00000087 256C6600                first_resistance_input db "%lf",0
    27                                  
    28 0000008B 506C6561736520656E-     resistance_text db "Please enter the resistance pf the secpmd subcircuit: ",0
    28 00000094 746572207468652072-
    28 0000009D 6573697374616E6365-
    28 000000A6 207066207468652073-
    28 000000AF 6563706D6420737562-
    28 000000B8 636972637569743A20-
    28 000000C1 00                 
    29                                  
    30 000000C2 256C6600                second_resistance_input db "%lf",0
    31                                  
    32 000000C6 54686520636F6D7075-     computed db "The computed total resistance is %.4lf ohms.",10,0
    32 000000CF 74656420746F74616C-
    32 000000D8 20726573697374616E-
    32 000000E1 636520697320252E34-
    32 000000EA 6C66206F686D732E0A-
    32 000000F3 00                 
    33                                  
    34 000000F4 54686520456C656374-     total_resistance db "The Electric Resistance will send the Total Resistanceto the caller.",10,0
    34 000000FD 726963205265736973-
    34 00000106 74616E63652077696C-
    34 0000010F 6C2073656E64207468-
    34 00000118 6520546F74616C2052-
    34 00000121 6573697374616E6365-
    34 0000012A 746F20746865206361-
    34 00000133 6C6C65722E0A00     
    35                                  
    36 0000013A 54686520656E642074-     end_time db "The end time on the clock is now %lu tics.", 10,0
    36 00000143 696D65206F6E207468-
    36 0000014C 6520636C6F636B2069-
    36 00000155 73206E6F7720256C75-
    36 0000015E 20746963732E0A00   
    37                                  
    38 00000166 54686520746F74616C-     total_time db "The total time for this computation was %lu tics", 10,0
    38 0000016F 2074696D6520666F72-
    38 00000178 207468697320636F6D-
    38 00000181 7075746174696F6E20-
    38 0000018A 77617320256C752074-
    38 00000193 6963730A00         
    39                                  
    40 00000198 000000000000F03F        one dq 1.0
    41                                  
    42                                  segment .bss
    43                                  
    44                                  
    45                                  segment .text
    46                                  resistance:
    47                                  
    48 00000000 55                      push    rbp
    49                                  
    50 00000001 4889E5                  mov     rbp,rsp
    51 00000004 53                      push    rbx
    52 00000005 51                      push    rcx
    53 00000006 52                      push    rdx
    54 00000007 56                      push    rsi
    55 00000008 57                      push    rdi
    56 00000009 4150                    push    r8
    57 0000000B 4151                    push    r9
    58 0000000D 4152                    push    r10
    59 0000000F 4153                    push    r11
    60 00000011 4154                    push    r12
    61 00000013 4155                    push    r13
    62 00000015 4156                    push    r14
    63 00000017 4157                    push    r15
    64 00000019 9C                      pushf
    65                                  
    66                                  
    67                                  
    68                                  
    69                                  
    70                                  ;================================print out starting tics========================================
    71 0000001A 6A00                    push qword 0
    72 0000001C 0FA2                    cpuid
    73 0000001E 0F31                    rdtsc
    74                                  
    75 00000020 48C1E220                shl rdx, 32
    76 00000024 4801D0                  add rax, rdx
    77 00000027 4989C7                  mov r15, rax
    78                                  
    79 0000002A B800000000              mov rax, 0
    80 0000002F 48BF-                   mov rdi, time
    80 00000031 [0000000000000000] 
    81 00000039 4C89FE                  mov rsi, r15
    82 0000003C E8(00000000)            call printf
    83 00000041 58                      pop rax
    84                                  
    85                                  
    86                                  
    87                                  ;================================time ========================================
    88                                  ;push qword 0
    89                                  ;mov rax, 0
    90                                  ;mov rdi, time
    91                                  ;call printf
    92                                  ;pop rax
    93                                  
    94                                  
    95                                  
    96                                  
    97                                  ;================================text ========================================
    98                                  
    99 00000042 6A00                    push qword 0
   100 00000044 B800000000              mov rax, 0
   101 00000049 48BF-                   mov rdi, text
   101 0000004B [2E00000000000000] 
   102 00000053 E8(00000000)            call printf
   103 00000058 58                      pop rax
   104                                  
   105                                  ;================================entr =========================================
   106                                  
   107 00000059 6A00                    push qword 0
   108 0000005B B800000000              mov rax, 0
   109 00000060 48BF-                   mov rdi, entr
   109 00000062 [5100000000000000] 
   110 0000006A E8(00000000)            call printf
   111 0000006F 58                      pop rax
   112                                  
   113                                  ;=================================first_resistance_input====================================
   114 00000070 6A00                    push qword 0
   115 00000072 6A00                    push qword 0
   116 00000074 B800000000              mov rax, 0
   117 00000079 48BF-                   mov rdi, first_resistance_input
   117 0000007B [8700000000000000] 
   118 00000083 4889E6                  mov rsi, rsp
   119 00000086 E8(00000000)            call scanf
   120 0000008B F2440F103C24            movsd xmm15, [rsp]
   121 00000091 58                      pop rax
   122 00000092 58                      pop rax
   123                                  ;=================================resistance_text====================================
   124                                  
   125 00000093 6A00                    push qword 0
   126 00000095 B800000000              mov rax, 0
   127 0000009A 48BF-                   mov rdi, resistance_text
   127 0000009C [8B00000000000000] 
   128 000000A4 E8(00000000)            call printf
   129 000000A9 58                      pop rax
   130                                  
   131                                  ;================================second_resistance_input==============================
   132 000000AA 6A00                    push qword 0
   133 000000AC 6A00                    push qword 0
   134 000000AE B800000000              mov rax, 0
   135 000000B3 48BF-                   mov rdi, second_resistance_input
   135 000000B5 [C200000000000000] 
   136 000000BD 4889E6                  mov rsi, rsp
   137 000000C0 E8(00000000)            call scanf
   138 000000C5 F2440F103424            movsd xmm14, [rsp]
   139 000000CB 58                      pop rax
   140 000000CC 58                      pop rax
   141                                  
   142                                  ;================================ calculations===========================================
   143                                  ;place 1.0 into xmm registers
   144 000000CD F2440F102425-           movsd xmm12, [one]
   144 000000D3 [98010000]         
   145 000000D7 F2440F101C25-           movsd xmm11, [one]
   145 000000DD [98010000]         
   146                                  
   147                                  ;divide both resistances by 1
   148 000000E1 F2450F5EE7              divsd xmm12, xmm15
   149 000000E6 F2450F5EDE              divsd xmm11, xmm14
   150                                  
   151                                  ; add the two values
   152 000000EB F2450F58E3              addsd xmm12, xmm11
   153 000000F0 F2450F10EC              movsd xmm13, xmm12
   154                                  
   155                                  ;===============================computed========================================
   156 000000F5 6A00                    push qword 0
   157 000000F7 6A00                    push qword 0
   158 000000F9 B801000000              mov rax, 1
   159 000000FE 48BF-                   mov rdi, computed
   159 00000100 [C600000000000000] 
   160 00000108 F2410F10C5              movsd xmm0, xmm13
   161 0000010D E8(00000000)            call printf
   162 00000112 58                      pop rax
   163 00000113 58                      pop rax
   164                                  
   165                                  
   166                                  
   167                                  ;===============================displaying end_time ========================================
   168 00000114 6A00                    push qword 0
   169 00000116 0FA2                    cpuid
   170 00000118 0F31                    rdtsc
   171                                  
   172 0000011A 48C1E220                shl rdx, 32
   173 0000011E 4801D0                  add rax, rdx
   174 00000121 4989C6                  mov r14, rax
   175 00000124 58                      pop rax
   176                                  
   177                                  
   178 00000125 6A00                    push qword 0
   179 00000127 B800000000              mov rax, 0
   180 0000012C 48BF-                   mov rdi, end_time
   180 0000012E [3A01000000000000] 
   181 00000136 4C89F6                  mov rsi, r14
   182 00000139 E8(00000000)            call printf
   183 0000013E 58                      pop rax
   184                                  
   185                                  ;===============================displaying total_time ========================================
   186 0000013F 6A00                    push qword 0
   187 00000141 B800000000              mov rax, 0
   188 00000146 48BF-                   mov rdi, total_time
   188 00000148 [6601000000000000] 
   189 00000150 4D29FE                  sub r14, r15
   190 00000153 4C89F6                  mov rsi, r14
   191 00000156 E8(00000000)            call printf
   192 0000015B 58                      pop rax
   193                                  
   194                                  
   195                                  
   196                                  
   197                                  
   198                                  
   199                                  
   200 0000015C F2410F10C5              movsd xmm0, xmm13
   201                                  ;===================Restore the original values to the GPRs=====================
   202 00000161 9D                      popf                                                        ;Restore rflags
   203 00000162 415F                    pop        r15                                              ;Restore r15
   204 00000164 415E                    pop        r14                                              ;Restore r14
   205 00000166 415D                    pop        r13                                              ;Restore r13
   206 00000168 415C                    pop        r12                                              ;Restore r12
   207 0000016A 415B                    pop        r11                                              ;Restore r11
   208 0000016C 415A                    pop        r10                                              ;Restore r10
   209 0000016E 4159                    pop        r9                                               ;Restore r9
   210 00000170 4158                    pop        r8                                               ;Restore r8
   211 00000172 5F                      pop        rdi                                              ;Restore rdi
   212 00000173 5E                      pop        rsi                                              ;Restore rsi
   213 00000174 5A                      pop        rdx                                              ;Restore rdx
   214 00000175 59                      pop        rcx                                              ;Restore rcx
   215 00000176 5B                      pop        rbx                                              ;Restore rbx
   216 00000177 5D                      pop        rbp                                              ;Restore rbp
   217 00000178 C3                      ret
